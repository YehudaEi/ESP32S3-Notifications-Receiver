name: CI Build and Lint

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]
  workflow_dispatch:

jobs:
  # Build Zephyr ESP32 Project
  build-zephyr:
    runs-on: ubuntu-latest
    container:
      image: zephyrprojectrtos/ci:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: project

    - name: Initialize Zephyr workspace
      working-directory: project
      run: |
        west init -l .
        west update
        west zephyr-export

    - name: Install Python dependencies
      run: |
        pip3 install -r ~/zephyrproject/zephyr/scripts/requirements.txt

    - name: Build ESP32S3 firmware
      working-directory: project
      run: |
        west build -b esp32s3_touch_lcd_1_28/esp32s3/procpu -p always
        
    - name: Check build artifacts
      working-directory: project
      run: |
        ls -lh build/zephyr/zephyr.elf
        ls -lh build/zephyr/zephyr.bin

    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v4
      with:
        name: esp32-firmware
        path: |
          project/build/zephyr/zephyr.elf
          project/build/zephyr/zephyr.bin
        retention-days: 30

  # Lint Zephyr C code
  lint-zephyr:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install cppcheck
      run: |
        sudo apt-get update
        sudo apt-get install -y cppcheck

    - name: Run cppcheck on C files
      run: |
        cppcheck --enable=all --inconclusive --std=c11 \
          --suppress=missingIncludeSystem \
          --suppress=unmatchedSuppression \
          --error-exitcode=1 \
          -I src/ \
          src/ 2>&1 | tee cppcheck-report.txt
      continue-on-error: true

    - name: Upload cppcheck report
      uses: actions/upload-artifact@v4
      with:
        name: cppcheck-report
        path: cppcheck-report.txt
        retention-days: 30

  # Build Android App
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      working-directory: AndroidApp
      run: chmod +x gradlew

    - name: Build Android APK (Debug)
      working-directory: AndroidApp
      run: ./gradlew assembleDebug

    - name: Build Android APK (Release)
      working-directory: AndroidApp
      run: ./gradlew assembleRelease
      continue-on-error: true

    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-apks
        path: |
          AndroidApp/app/build/outputs/apk/debug/*.apk
          AndroidApp/app/build/outputs/apk/release/*.apk
        retention-days: 30

  # Lint Android App
  lint-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      working-directory: AndroidApp
      run: chmod +x gradlew

    - name: Run Android Lint
      working-directory: AndroidApp
      run: ./gradlew lint

    - name: Upload lint results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-lint-report
        path: AndroidApp/app/build/reports/lint-results-*.html
        retention-days: 30

    - name: Run Kotlin lint (ktlint)
      working-directory: AndroidApp
      run: |
        ./gradlew ktlintCheck || true
      continue-on-error: true

  # Unit Tests for Android
  test-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      working-directory: AndroidApp
      run: chmod +x gradlew

    - name: Run unit tests
      working-directory: AndroidApp
      run: ./gradlew test

    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-test-reports
        path: AndroidApp/app/build/reports/tests/
        retention-days: 30

  # Summary Job
  build-summary:
    runs-on: ubuntu-latest
    needs: [build-zephyr, lint-zephyr, build-android, lint-android, test-android]
    if: always()
    
    steps:
    - name: Check build results
      run: |
        echo "Build Summary:"
        echo "=============="
        echo "Zephyr Build: ${{ needs.build-zephyr.result }}"
        echo "Zephyr Lint: ${{ needs.lint-zephyr.result }}"
        echo "Android Build: ${{ needs.build-android.result }}"
        echo "Android Lint: ${{ needs.lint-android.result }}"
        echo "Android Tests: ${{ needs.test-android.result }}"
        
    - name: Fail if any job failed
      if: |
        needs.build-zephyr.result == 'failure' ||
        needs.build-android.result == 'failure'
      run: exit 1
